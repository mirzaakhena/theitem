package repository

import (
	"context"
	"{{.PackagePath}}/domain_{{.DomainName}}/model/entity"
	"{{.PackagePath}}/domain_{{.DomainName}}/model/vo"
	"time"
)

type Save{{PascalCase .EntityName}}Repo interface {
	Save{{PascalCase .EntityName}}(ctx context.Context, obj *entity.{{PascalCase .EntityName}}) error
}

type FindAll{{PascalCase .EntityName}}FilterRequest struct {
	Page      int
	Size      int
	// add other field to filter here ...
}

type FindAll{{PascalCase .EntityName}}Repo interface {
	FindAll{{PascalCase .EntityName}}(ctx context.Context, req FindAll{{PascalCase .EntityName}}FilterRequest) ([]*entity.{{PascalCase .EntityName}}, int64, error)
}

type Delete{{PascalCase .EntityName}}Repo interface {
	Delete{{PascalCase .EntityName}}(ctx context.Context, {{CamelCase .EntityName}}ID vo.{{PascalCase .EntityName}}ID) error
}

type FindOne{{PascalCase .EntityName}}ByIDRepo interface {
	FindOne{{PascalCase .EntityName}}ByID(ctx context.Context, {{CamelCase .EntityName}}ID vo.{{PascalCase .EntityName}}ID) (*entity.{{PascalCase .EntityName}}, error)
}
